

NEW TZ DATABASE
* Copy parsing code from other NPM module timezone-js 
  (node-preparse.js and its dependencies) to a temp/ dir
* Change date.js to exclude more files:
  , EXCLUDED = new RegExp('README|Makefile|factory|CONTRIBUTING|checktab|yearistype|iso3166|leapseconds|NEWS|README|Theory|zone|zone1970|zoneinfo2tdf(\\.+)', 'i');
* Extract TZ database in a directory, say TZ_DIR
  NOTE: no other files (like the tar file itself) may be in the directory
* Run 
node node-preparse.js TZ_DIR/ > timezone-data.json
* In case of trouble, first throw away all non-zone files from the tz data directory
* copy timezone-data.json to lib/
* rebuild
* Adjust README.md  to change database version number and changelog


MODULE PUBLISH
* Adjust README.md and add examples and changelog, and possibly features
* Adjust package.json and adjust version number
* Run:
gulp clean && gulp release && npm test
* Commit changes and Sync with GitHub
* In GitHub, create a release tag
* Ensure .npmrc points to the world NPM repository, not the spirit repository
* Run:
npm publish

DEFINITELYTYPED
* Sync your DefinitelyTyped fork to the latest version of DefinitelyTyped
* Make a branch timezonecomplete-X.Y.Z
* Copy the last timezonecomplete.d.ts to timezonecomplete-<PREVIOUS_VERSION>.d.ts
* Edit it so that the module name is timezonecomplete-<PREVIOUS_VERSION>
* Copy the last timezonecomplete-tests.ts to timezonecomplete-<PREVIOUS_VERSION>-tests.d.ts
* Edit it so that it refers to timezonecomplete-<PREVIOUS_VERSION>.d.ts
* Copy the lib/timezonecomplete.d.ts over the old one
* Add to the timezonecomplete-tests.ts
* For EVERY -tests.ts file, run:
tsc -m commonjs --noImplicitAny <TS_FILE>
* Commit and sync and do a pull request



