/// <reference path="../typings/test.d.ts" />
var sourcemapsupport = require("source-map-support");
// Enable source-map support for backtraces. Causes TS files & linenumbers to show up in them.
sourcemapsupport.install({ handleUncaughtExceptions: false });
var chai = require("chai");
var expect = chai.expect;
var parse = require("../lib/parse");
describe("parse", function () {
    describe("parseable()", function () {
        it("should return true for parseable strings", function () {
            expect(parse.parseable("2015-01-31", "yyyy-MM-dd")).to.equal(true);
        });
        it("should return false for not-to-format strings", function () {
            expect(parse.parseable("2015-31-01", "yyyy-MM-dd")).to.equal(false);
        });
        it("should return false for non-existing days", function () {
            expect(parse.parseable("2015-01-33", "yyyy-MM-dd")).to.equal(false);
        });
        it("should return false for trailing chars if trailing not allowed", function () {
            expect(parse.parseable("2015-01-31 UTC", "yyyy-MM-dd", false)).to.equal(false);
        });
        it("should return true for trailing chars if trailing allowed", function () {
            expect(parse.parseable("2015-01-31 UTC", "yyyy-MM-dd", true)).to.equal(true);
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdGVzdC1wYXJzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2Q0FBNkM7QUFFN0MsSUFBTyxnQkFBZ0IsV0FBVyxvQkFBb0IsQ0FBQyxDQUFDO0FBQ3hELDhGQUE4RjtBQUM5RixnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsRUFBRSx3QkFBd0IsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0FBRzlELElBQU8sSUFBSSxXQUFXLE1BQU0sQ0FBQyxDQUFDO0FBQzlCLElBQU8sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7QUFFNUIsSUFBTyxLQUFLLFdBQVcsY0FBYyxDQUFDLENBQUM7QUFFdkMsUUFBUSxDQUFDLE9BQU8sRUFBRTtJQUNqQixRQUFRLENBQUMsYUFBYSxFQUFFO1FBQ3ZCLEVBQUUsQ0FBQywwQ0FBMEMsRUFBRTtZQUM5QyxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BFLENBQUMsQ0FBQyxDQUFDO1FBQ0gsRUFBRSxDQUFDLCtDQUErQyxFQUFFO1lBQ25ELE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckUsQ0FBQyxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsMkNBQTJDLEVBQUU7WUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyRSxDQUFDLENBQUMsQ0FBQztRQUNILEVBQUUsQ0FBQyxnRUFBZ0UsRUFBRTtZQUNwRSxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hGLENBQUMsQ0FBQyxDQUFDO1FBQ0gsRUFBRSxDQUFDLDJEQUEyRCxFQUFFO1lBQy9ELE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLGdCQUFnQixFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUUsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvdGVzdC1wYXJzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi90eXBpbmdzL3Rlc3QuZC50c1wiIC8+XHJcblxyXG5pbXBvcnQgc291cmNlbWFwc3VwcG9ydCA9IHJlcXVpcmUoXCJzb3VyY2UtbWFwLXN1cHBvcnRcIik7XHJcbi8vIEVuYWJsZSBzb3VyY2UtbWFwIHN1cHBvcnQgZm9yIGJhY2t0cmFjZXMuIENhdXNlcyBUUyBmaWxlcyAmIGxpbmVudW1iZXJzIHRvIHNob3cgdXAgaW4gdGhlbS5cclxuc291cmNlbWFwc3VwcG9ydC5pbnN0YWxsKHsgaGFuZGxlVW5jYXVnaHRFeGNlcHRpb25zOiBmYWxzZSB9KTtcclxuXHJcbmltcG9ydCBhc3NlcnQgPSByZXF1aXJlKFwiYXNzZXJ0XCIpO1xyXG5pbXBvcnQgY2hhaSA9IHJlcXVpcmUoXCJjaGFpXCIpO1xyXG5pbXBvcnQgZXhwZWN0ID0gY2hhaS5leHBlY3Q7XHJcblxyXG5pbXBvcnQgcGFyc2UgPSByZXF1aXJlKFwiLi4vbGliL3BhcnNlXCIpO1xyXG5cclxuZGVzY3JpYmUoXCJwYXJzZVwiLCAoKTogdm9pZCA9PiB7XHJcblx0ZGVzY3JpYmUoXCJwYXJzZWFibGUoKVwiLCAoKTogdm9pZCA9PiB7XHJcblx0XHRpdChcInNob3VsZCByZXR1cm4gdHJ1ZSBmb3IgcGFyc2VhYmxlIHN0cmluZ3NcIiwgKCk6IHZvaWQgPT4ge1xyXG5cdFx0XHRleHBlY3QocGFyc2UucGFyc2VhYmxlKFwiMjAxNS0wMS0zMVwiLCBcInl5eXktTU0tZGRcIikpLnRvLmVxdWFsKHRydWUpO1xyXG5cdFx0fSk7XHJcblx0XHRpdChcInNob3VsZCByZXR1cm4gZmFsc2UgZm9yIG5vdC10by1mb3JtYXQgc3RyaW5nc1wiLCAoKTogdm9pZCA9PiB7XHJcblx0XHRcdGV4cGVjdChwYXJzZS5wYXJzZWFibGUoXCIyMDE1LTMxLTAxXCIsIFwieXl5eS1NTS1kZFwiKSkudG8uZXF1YWwoZmFsc2UpO1xyXG5cdFx0fSk7XHJcblx0XHRpdChcInNob3VsZCByZXR1cm4gZmFsc2UgZm9yIG5vbi1leGlzdGluZyBkYXlzXCIsICgpOiB2b2lkID0+IHtcclxuXHRcdFx0ZXhwZWN0KHBhcnNlLnBhcnNlYWJsZShcIjIwMTUtMDEtMzNcIiwgXCJ5eXl5LU1NLWRkXCIpKS50by5lcXVhbChmYWxzZSk7XHJcblx0XHR9KTtcclxuXHRcdGl0KFwic2hvdWxkIHJldHVybiBmYWxzZSBmb3IgdHJhaWxpbmcgY2hhcnMgaWYgdHJhaWxpbmcgbm90IGFsbG93ZWRcIiwgKCk6IHZvaWQgPT4ge1xyXG5cdFx0XHRleHBlY3QocGFyc2UucGFyc2VhYmxlKFwiMjAxNS0wMS0zMSBVVENcIiwgXCJ5eXl5LU1NLWRkXCIsIGZhbHNlKSkudG8uZXF1YWwoZmFsc2UpO1xyXG5cdFx0fSk7XHJcblx0XHRpdChcInNob3VsZCByZXR1cm4gdHJ1ZSBmb3IgdHJhaWxpbmcgY2hhcnMgaWYgdHJhaWxpbmcgYWxsb3dlZFwiLCAoKTogdm9pZCA9PiB7XHJcblx0XHRcdGV4cGVjdChwYXJzZS5wYXJzZWFibGUoXCIyMDE1LTAxLTMxIFVUQ1wiLCBcInl5eXktTU0tZGRcIiwgdHJ1ZSkpLnRvLmVxdWFsKHRydWUpO1xyXG5cdFx0fSk7XHJcblx0fSk7XHJcbn0pO1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
