/**
 * Copyright(c) 2014 Spirit IT BV
 *
 * Date and Time utility functions - main index
 */
/// <reference path="../typings/lib.d.ts"/>
"use strict";
/* tslint:disable:no-unused-expression */
var basics = require("./basics");
basics;
exports.TimeUnit = basics.TimeUnit;
exports.WeekDay = basics.WeekDay;
exports.timeUnitToMilliseconds = basics.timeUnitToMilliseconds;
exports.isLeapYear = basics.isLeapYear;
exports.daysInMonth = basics.daysInMonth;
exports.daysInYear = basics.daysInYear;
exports.firstWeekDayOfMonth = basics.firstWeekDayOfMonth;
exports.lastWeekDayOfMonth = basics.lastWeekDayOfMonth;
exports.weekDayOnOrAfter = basics.weekDayOnOrAfter;
exports.weekDayOnOrBefore = basics.weekDayOnOrBefore;
exports.weekNumber = basics.weekNumber;
exports.weekOfMonth = basics.weekOfMonth;
exports.dayOfYear = basics.dayOfYear;
exports.secondOfDay = basics.secondOfDay;
exports.timeUnitToString = basics.timeUnitToString;
exports.stringToTimeUnit = basics.stringToTimeUnit;
var datetime = require("./datetime");
datetime;
exports.DateTime = datetime.DateTime;
exports.now = datetime.now;
exports.nowLocal = datetime.nowLocal;
exports.nowUtc = datetime.nowUtc;
exports.UTC_MILLIS_CACHE = datetime.UTC_MILLIS_CACHE;
var duration = require("./duration");
duration;
exports.Duration = duration.Duration;
exports.years = duration.years;
exports.months = duration.months;
exports.days = duration.days;
exports.hours = duration.hours;
exports.minutes = duration.minutes;
exports.seconds = duration.seconds;
exports.milliseconds = duration.milliseconds;
var format = require("./format");
format;
exports.DEFAULT_FORMAT_OPTIONS = format.DEFAULT_FORMAT_OPTIONS;
var javascript = require("./javascript");
javascript;
exports.DateFunctions = javascript.DateFunctions;
var period = require("./period");
period;
exports.Period = period.Period;
exports.PeriodDst = period.PeriodDst;
exports.periodDstToString = period.periodDstToString;
var timesource = require("./timesource");
timesource;
exports.RealTimeSource = timesource.RealTimeSource;
var timezone = require("./timezone");
timezone;
exports.NormalizeOption = timezone.NormalizeOption;
exports.TimeZoneKind = timezone.TimeZoneKind;
exports.TimeZone = timezone.TimeZone;
exports.local = timezone.local;
exports.utc = timezone.utc;
exports.zone = timezone.zone;
var tzDatabase = require("./tz-database");
tzDatabase;
exports.AtType = tzDatabase.AtType;
exports.isValidOffsetString = tzDatabase.isValidOffsetString;
exports.OnType = tzDatabase.OnType;
exports.RuleInfo = tzDatabase.RuleInfo;
exports.ToType = tzDatabase.ToType;
exports.Transition = tzDatabase.Transition;
exports.TzDatabase = tzDatabase.TzDatabase;
exports.ZoneInfo = tzDatabase.ZoneInfo;
var globals = require("./globals");
globals;
exports.min = globals.min;
exports.max = globals.max;

//# sourceMappingURL=data:application/json;base64,
