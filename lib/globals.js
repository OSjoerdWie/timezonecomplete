/**
 * Copyright(c) 2014 Spirit IT BV
 *
 * Global functions depending on DateTime/Duration etc
 */
/// <reference path="../typings/lib.d.ts"/>
"use strict";
var assert = require("assert");
var datetime = require("./datetime");
var DateTime = datetime.DateTime;
var duration = require("./duration");
var Duration = duration.Duration;
/**
 * Returns the minimum of two DateTimes or Durations
 */
function min(d1, d2) {
    assert(d1, "first argument is null");
    assert(d2, "first argument is null");
    /* istanbul ignore next */
    assert((d1 instanceof DateTime && d2 instanceof DateTime) || (d1 instanceof Duration && d2 instanceof Duration), "Either two datetimes or two durations expected");
    return d1.min(d2);
}
exports.min = min;
/**
 * Returns the maximum of two DateTimes or Durations
 */
function max(d1, d2) {
    assert(d1, "first argument is null");
    assert(d2, "first argument is null");
    /* istanbul ignore next */
    assert((d1 instanceof DateTime && d2 instanceof DateTime) || (d1 instanceof Duration && d2 instanceof Duration), "Either two datetimes or two durations expected");
    return d1.max(d2);
}
exports.max = max;
/**
 * Returns the absolute value of a Duration
 */
function abs(d) {
    assert(d, "first argument is null");
    assert(d instanceof Duration, "first argument is not a Duration");
    return d.abs();
}
exports.abs = abs;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbHMudHMiXSwibmFtZXMiOlsibWluIiwibWF4IiwiYWJzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsQUFFQSwyQ0FGMkM7QUFFM0MsWUFBWSxDQUFDO0FBRWIsSUFBTyxNQUFNLFdBQVcsUUFBUSxDQUFDLENBQUM7QUFFbEMsSUFBTyxRQUFRLFdBQVcsWUFBWSxDQUFDLENBQUM7QUFDeEMsSUFBTyxRQUFRLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQztBQUVwQyxJQUFPLFFBQVEsV0FBVyxZQUFZLENBQUMsQ0FBQztBQUN4QyxJQUFPLFFBQVEsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO0FBV3BDLEFBR0E7O0dBREc7U0FDYSxHQUFHLENBQUMsRUFBTyxFQUFFLEVBQU87SUFDbkNBLE1BQU1BLENBQUNBLEVBQUVBLEVBQUVBLHdCQUF3QkEsQ0FBQ0EsQ0FBQ0E7SUFDckNBLE1BQU1BLENBQUNBLEVBQUVBLEVBQUVBLHdCQUF3QkEsQ0FBQ0EsQ0FBQ0E7SUFDckNBLEFBQ0FBLDBCQUQwQkE7SUFDMUJBLE1BQU1BLENBQUNBLENBQUNBLEVBQUVBLFlBQVlBLFFBQVFBLElBQUlBLEVBQUVBLFlBQVlBLFFBQVFBLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLFlBQVlBLFFBQVFBLElBQUlBLEVBQUVBLFlBQVlBLFFBQVFBLENBQUNBLEVBQzlHQSxnREFBZ0RBLENBQUNBLENBQUNBO0lBQ25EQSxNQUFNQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtBQUNuQkEsQ0FBQ0E7QUFQZSxXQUFHLEdBQUgsR0FPZixDQUFBO0FBVUQsQUFHQTs7R0FERztTQUNhLEdBQUcsQ0FBQyxFQUFPLEVBQUUsRUFBTztJQUNuQ0MsTUFBTUEsQ0FBQ0EsRUFBRUEsRUFBRUEsd0JBQXdCQSxDQUFDQSxDQUFDQTtJQUNyQ0EsTUFBTUEsQ0FBQ0EsRUFBRUEsRUFBRUEsd0JBQXdCQSxDQUFDQSxDQUFDQTtJQUNyQ0EsQUFDQUEsMEJBRDBCQTtJQUMxQkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsRUFBRUEsWUFBWUEsUUFBUUEsSUFBSUEsRUFBRUEsWUFBWUEsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsWUFBWUEsUUFBUUEsSUFBSUEsRUFBRUEsWUFBWUEsUUFBUUEsQ0FBQ0EsRUFDOUdBLGdEQUFnREEsQ0FBQ0EsQ0FBQ0E7SUFDbkRBLE1BQU1BLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBO0FBQ25CQSxDQUFDQTtBQVBlLFdBQUcsR0FBSCxHQU9mLENBQUE7QUFFRCxBQUdBOztHQURHO1NBQ2EsR0FBRyxDQUFDLENBQVc7SUFDOUJDLE1BQU1BLENBQUNBLENBQUNBLEVBQUVBLHdCQUF3QkEsQ0FBQ0EsQ0FBQ0E7SUFDcENBLE1BQU1BLENBQUNBLENBQUNBLFlBQVlBLFFBQVFBLEVBQUVBLGtDQUFrQ0EsQ0FBQ0EsQ0FBQ0E7SUFDbEVBLE1BQU1BLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLEVBQUVBLENBQUNBO0FBQ2hCQSxDQUFDQTtBQUplLFdBQUcsR0FBSCxHQUlmLENBQUEiLCJmaWxlIjoibGliL2dsb2JhbHMuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==